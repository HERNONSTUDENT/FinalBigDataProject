{"name":"SilverToGold","ppdf:dataflowId":"ccb0d07d-04fb-4dd3-a8c8-c1e129d23c56","ppdf:owner":{"tenantId":"47855545-00bb-4800-a65f-e79104ec0fc4","userId":"a303ecf4-95b3-4c32-baec-e595dfc1b6c3"},"ppdf:fastCopy":true,"version":"1.0","culture":"en-GB","modifiedTime":"2025-05-02T08:46:13.1694859+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"airlines_refined":{"queryId":"057b29a6-30c4-4d9e-8ea9-5fccedf0b58d","queryName":"airlines_refined","loadEnabled":true},"DefaultDestination":{"queryId":"53966a5a-9442-4186-a457-779bdc9add44","queryName":"DefaultDestination"},"airports_refined":{"queryId":"e2853152-8811-45a9-8dd6-b2db669f7c17","queryName":"airports_refined","loadEnabled":true},"flights_refined":{"queryId":"b87c4170-7194-42b0-ac08-672224b44f76","queryName":"flights_refined","loadEnabled":true},"weather_noaa_refined":{"queryId":"f3694e13-6434-4b1f-a674-274bcec8d6e5","queryName":"weather_noaa_refined","loadEnabled":true},"weather_raw_py":{"queryId":"c5e1f444-44d6-4003-8e1c-30b151d5c346","queryName":"weather_raw_py","loadEnabled":true},"airlines_refined_DataDestination":{"queryId":"41948480-bb17-49a0-aea2-880ce8bdcdd1","queryName":"airlines_refined_DataDestination"},"airlines_refined_WriteToDataDestination":{"queryId":"b9ee759c-ef97-4b1a-8e48-f064b8ca55e6","queryName":"airlines_refined_WriteToDataDestination"},"airlines_refined_TransformForWriteToDataDestination":{"queryId":"23c30a77-094f-4d8e-8121-09718614e4f3","queryName":"airlines_refined_TransformForWriteToDataDestination"},"DefaultStaging":{"queryId":"ec5c5e54-7468-4f88-b901-ff6a1477b447","queryName":"DefaultStaging"},"FastCopyStaging":{"queryId":"13b9a1d4-e36a-47bb-a710-65264ca199f6","queryName":"FastCopyStaging"},"airports_refined_DataDestination":{"queryId":"8442b4f0-e54b-427e-8c46-2bd951a10ae5","queryName":"airports_refined_DataDestination"},"airports_refined_WriteToDataDestination":{"queryId":"70db0358-8ce0-43f6-b711-20306d95d366","queryName":"airports_refined_WriteToDataDestination"},"airports_refined_TransformForWriteToDataDestination":{"queryId":"f4437b0e-51f6-47aa-aeaa-b8db30a2b88d","queryName":"airports_refined_TransformForWriteToDataDestination"},"flights_refined_DataDestination":{"queryId":"fbbbb6bd-829c-449a-8ee9-197117348572","queryName":"flights_refined_DataDestination"},"flights_refined_WriteToDataDestination":{"queryId":"5ee399e3-d7eb-40ff-8b57-abfd2a1255a1","queryName":"flights_refined_WriteToDataDestination"},"flights_refined_TransformForWriteToDataDestination":{"queryId":"5cc0a9b0-699c-4cc3-a923-06947655e7b6","queryName":"flights_refined_TransformForWriteToDataDestination"},"weather_noaa_refined_DataDestination":{"queryId":"e070b517-1aab-4575-b751-1e3ab9bf25b3","queryName":"weather_noaa_refined_DataDestination"},"weather_noaa_refined_WriteToDataDestination":{"queryId":"44b2acd5-45f0-429d-83a8-4ddead90ee64","queryName":"weather_noaa_refined_WriteToDataDestination"},"weather_noaa_refined_TransformForWriteToDataDestination":{"queryId":"693bbe6b-0a56-4c85-869f-444e6da922d9","queryName":"weather_noaa_refined_TransformForWriteToDataDestination"},"weather_raw_py_DataDestination":{"queryId":"be115446-a545-49f7-aeac-b9f9515a0e58","queryName":"weather_raw_py_DataDestination"},"weather_raw_py_WriteToDataDestination":{"queryId":"1654c2a8-832b-48a1-ac4f-f1150aad06fc","queryName":"weather_raw_py_WriteToDataDestination"},"weather_raw_py_TransformForWriteToDataDestination":{"queryId":"a84853a0-0b38-4277-ae8c-7f4d3d4b8b81","queryName":"weather_raw_py_TransformForWriteToDataDestination"}},"document":"section Section1;\r\n[Staging = \"FastCopyStaging\"]\r\nshared airlines_refined = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"7857affb-b8aa-4d1a-a5e6-d75cbbd8fc2d\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"airlines_refined\", ItemKind = \"Table\"]}[Data]\r\nin\r\n  #\"Navigation 2\";\r\nshared DefaultDestination = let\r\n  DefaultDestination = Fabric.Warehouse([CreateNavigationProperties = false]){[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data]{[warehouseId = \"0d7c1271-91e1-403f-a08d-b2184a45fb8f\"]}[Data]\r\nin\r\n  DefaultDestination;\r\n[Staging = \"FastCopyStaging\"]\r\nshared airports_refined = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"7857affb-b8aa-4d1a-a5e6-d75cbbd8fc2d\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"airports_refined\", ItemKind = \"Table\"]}[Data],\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Navigation 2\", {{\"LATITUDE\", type number}, {\"LONGITUDE\", type number}})\r\nin\r\n  #\"Changed column type\";\r\n[Staging = \"FastCopyStaging\"]\r\nshared flights_refined = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"7857affb-b8aa-4d1a-a5e6-d75cbbd8fc2d\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"flights_refined\", ItemKind = \"Table\"]}[Data],\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Navigation 2\", {{\"MONTH\", Int64.Type}, {\"DAY\", Int64.Type}, {\"DAY_OF_WEEK\", Int64.Type}, {\"YEAR\", Int64.Type}})\r\nin\r\n  #\"Changed column type\";\r\n[Staging = \"FastCopyStaging\"]\r\nshared weather_noaa_refined = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"7857affb-b8aa-4d1a-a5e6-d75cbbd8fc2d\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"weather_noaa_refined\", ItemKind = \"Table\"]}[Data],\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Navigation 2\", {{\"LATITUDE\", type number}, {\"LONGITUDE\", type number}, {\"STATION\", type text}, {\"DATE\", type date}})\r\nin\r\n  #\"Changed column type\";\r\n[Staging = \"FastCopyStaging\"]\r\nshared weather_raw_py = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"dc32af3f-4646-46af-a08a-e5eb802becef\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"7857affb-b8aa-4d1a-a5e6-d75cbbd8fc2d\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"weather_raw_py\", ItemKind = \"Table\"]}[Data]\r\nin\r\n  #\"Navigation 2\";\r\nshared airlines_refined_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"airlines_refined\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[IATA_CODE = nullable Text.Type, AIRLINE = nullable Text.Type], {}), [DeleteWhenEmpty = false])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared airlines_refined_WriteToDataDestination = let\r\n  airlines_refined_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = airlines_refined_DataDestination], (txn) => {TableAction.InsertRows(txn[Target], airlines_refined_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  airlines_refined_WriteToDataDestination;\r\nshared airlines_refined_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(airlines_refined, {\"IATA_CODE\", \"AIRLINE\"})\r\nin\r\n    SourceTable;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\nshared airports_refined_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"airports_refined\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[IATA_CODE = nullable Text.Type, AIRPORT = nullable Text.Type, CITY = nullable Text.Type, STATE = nullable Text.Type, COUNTRY = nullable Text.Type, LATITUDE = nullable Number.Type, LONGITUDE = nullable Number.Type], {}), [DeleteWhenEmpty = false])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared airports_refined_WriteToDataDestination = let\r\n  airports_refined_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = airports_refined_DataDestination], (txn) => {TableAction.InsertRows(txn[Target], airports_refined_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  airports_refined_WriteToDataDestination;\r\nshared airports_refined_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(airports_refined, {\"IATA_CODE\", \"AIRPORT\", \"CITY\", \"STATE\", \"COUNTRY\", \"LATITUDE\", \"LONGITUDE\"})\r\nin\r\n    SourceTable;\r\nshared flights_refined_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"flights_refined\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[YEAR = nullable Int64.Type, MONTH = nullable Int64.Type, DAY = nullable Int64.Type, DAY_OF_WEEK = nullable Int64.Type, AIRLINE = nullable Text.Type, FLIGHT_NUMBER = nullable Text.Type, TAIL_NUMBER = nullable Text.Type, ORIGIN_AIRPORT = nullable Text.Type, DESTINATION_AIRPORT = nullable Text.Type, SCHEDULED_DEPARTURE = nullable Text.Type, DEPARTURE_TIME = nullable Text.Type, DEPARTURE_DELAY = nullable Text.Type, TAXI_OUT = nullable Text.Type, WHEELS_OFF = nullable Text.Type, SCHEDULED_TIME = nullable Text.Type, ELAPSED_TIME = nullable Text.Type, AIR_TIME = nullable Text.Type, DISTANCE = nullable Text.Type, WHEELS_ON = nullable Text.Type, TAXI_IN = nullable Text.Type, SCHEDULED_ARRIVAL = nullable Text.Type, ARRIVAL_TIME = nullable Text.Type, ARRIVAL_DELAY = nullable Text.Type, DIVERTED = nullable Text.Type, CANCELLED = nullable Text.Type, CANCELLATION_REASON = nullable Text.Type, AIR_SYSTEM_DELAY = nullable Text.Type, SECURITY_DELAY = nullable Text.Type, AIRLINE_DELAY = nullable Text.Type, LATE_AIRCRAFT_DELAY = nullable Text.Type, WEATHER_DELAY = nullable Text.Type], {}), [DeleteWhenEmpty = false])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared flights_refined_WriteToDataDestination = let\r\n  flights_refined_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = flights_refined_DataDestination], (txn) => {TableAction.InsertRows(txn[Target], flights_refined_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  flights_refined_WriteToDataDestination;\r\nshared flights_refined_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(flights_refined, {\"YEAR\", \"MONTH\", \"DAY\", \"DAY_OF_WEEK\", \"AIRLINE\", \"FLIGHT_NUMBER\", \"TAIL_NUMBER\", \"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\", \"SCHEDULED_DEPARTURE\", \"DEPARTURE_TIME\", \"DEPARTURE_DELAY\", \"TAXI_OUT\", \"WHEELS_OFF\", \"SCHEDULED_TIME\", \"ELAPSED_TIME\", \"AIR_TIME\", \"DISTANCE\", \"WHEELS_ON\", \"TAXI_IN\", \"SCHEDULED_ARRIVAL\", \"ARRIVAL_TIME\", \"ARRIVAL_DELAY\", \"DIVERTED\", \"CANCELLED\", \"CANCELLATION_REASON\", \"AIR_SYSTEM_DELAY\", \"SECURITY_DELAY\", \"AIRLINE_DELAY\", \"LATE_AIRCRAFT_DELAY\", \"WEATHER_DELAY\"})\r\nin\r\n    SourceTable;\r\nshared weather_noaa_refined_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"weather_noaa_refined\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[STATION = nullable Text.Type, DATE = nullable Date.Type, LATITUDE = nullable Number.Type, LONGITUDE = nullable Number.Type, ELEVATION = nullable Text.Type, NAME = nullable Text.Type, TEMP = nullable Text.Type, TEMP_ATTRIBUTES = nullable Text.Type, DEWP = nullable Text.Type, DEWP_ATTRIBUTES = nullable Text.Type, SLP = nullable Text.Type, SLP_ATTRIBUTES = nullable Text.Type, STP = nullable Text.Type, STP_ATTRIBUTES = nullable Text.Type, VISIB = nullable Text.Type, VISIB_ATTRIBUTES = nullable Text.Type, WDSP = nullable Text.Type, WDSP_ATTRIBUTES = nullable Text.Type, MXSPD = nullable Text.Type, GUST = nullable Text.Type, MAX = nullable Text.Type, MAX_ATTRIBUTES = nullable Text.Type, MIN = nullable Text.Type, MIN_ATTRIBUTES = nullable Text.Type, PRCP = nullable Text.Type, PRCP_ATTRIBUTES = nullable Text.Type, SNDP = nullable Text.Type, FRSHTT = nullable Text.Type], {}), [DeleteWhenEmpty = false])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared weather_noaa_refined_WriteToDataDestination = let\r\n  weather_noaa_refined_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = weather_noaa_refined_DataDestination], (txn) => {TableAction.InsertRows(txn[Target], weather_noaa_refined_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  weather_noaa_refined_WriteToDataDestination;\r\nshared weather_noaa_refined_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(weather_noaa_refined, {\"STATION\", \"DATE\", \"LATITUDE\", \"LONGITUDE\", \"ELEVATION\", \"NAME\", \"TEMP\", \"TEMP_ATTRIBUTES\", \"DEWP\", \"DEWP_ATTRIBUTES\", \"SLP\", \"SLP_ATTRIBUTES\", \"STP\", \"STP_ATTRIBUTES\", \"VISIB\", \"VISIB_ATTRIBUTES\", \"WDSP\", \"WDSP_ATTRIBUTES\", \"MXSPD\", \"GUST\", \"MAX\", \"MAX_ATTRIBUTES\", \"MIN\", \"MIN_ATTRIBUTES\", \"PRCP\", \"PRCP_ATTRIBUTES\", \"SNDP\", \"FRSHTT\"})\r\nin\r\n    SourceTable;\r\nshared weather_raw_py_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"weather_raw_py\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[city = nullable Text.Type, datetime = nullable DateTime.Type, temperature_celsius = nullable Double.Type, humidity = nullable Int64.Type, wind_speed = nullable Double.Type, weather_description = nullable Text.Type], {}), [DeleteWhenEmpty = false])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared weather_raw_py_WriteToDataDestination = let\r\n  weather_raw_py_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = weather_raw_py_DataDestination], (txn) => {TableAction.InsertRows(txn[Target], weather_raw_py_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  weather_raw_py_WriteToDataDestination;\r\nshared weather_raw_py_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(weather_raw_py, {\"city\", \"datetime\", \"temperature_celsius\", \"humidity\", \"wind_speed\", \"weather_description\"})\r\nin\r\n    SourceTable;\r\n","connectionOverrides":[{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null},{"path":"Warehouse","kind":"Warehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Warehouse\",\"path\":\"Warehouse\"}","audience":null}]},"entities":[{"$type":"LocalEntity","name":"airlines_refined","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"airlines_refined.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"IATA_CODE","dataType":"string"},{"name":"AIRLINE","dataType":"string"}]},{"$type":"LocalEntity","name":"airports_refined","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"airports_refined.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"IATA_CODE","dataType":"string"},{"name":"AIRPORT","dataType":"string"},{"name":"CITY","dataType":"string"},{"name":"STATE","dataType":"string"},{"name":"COUNTRY","dataType":"string"},{"name":"LATITUDE","dataType":"double"},{"name":"LONGITUDE","dataType":"double"}]},{"$type":"LocalEntity","name":"flights_refined","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"flights_refined.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"YEAR","dataType":"int64"},{"name":"MONTH","dataType":"int64"},{"name":"DAY","dataType":"int64"},{"name":"DAY_OF_WEEK","dataType":"int64"},{"name":"AIRLINE","dataType":"string"},{"name":"FLIGHT_NUMBER","dataType":"string"},{"name":"TAIL_NUMBER","dataType":"string"},{"name":"ORIGIN_AIRPORT","dataType":"string"},{"name":"DESTINATION_AIRPORT","dataType":"string"},{"name":"SCHEDULED_DEPARTURE","dataType":"string"},{"name":"DEPARTURE_TIME","dataType":"string"},{"name":"DEPARTURE_DELAY","dataType":"string"},{"name":"TAXI_OUT","dataType":"string"},{"name":"WHEELS_OFF","dataType":"string"},{"name":"SCHEDULED_TIME","dataType":"string"},{"name":"ELAPSED_TIME","dataType":"string"},{"name":"AIR_TIME","dataType":"string"},{"name":"DISTANCE","dataType":"string"},{"name":"WHEELS_ON","dataType":"string"},{"name":"TAXI_IN","dataType":"string"},{"name":"SCHEDULED_ARRIVAL","dataType":"string"},{"name":"ARRIVAL_TIME","dataType":"string"},{"name":"ARRIVAL_DELAY","dataType":"string"},{"name":"DIVERTED","dataType":"string"},{"name":"CANCELLED","dataType":"string"},{"name":"CANCELLATION_REASON","dataType":"string"},{"name":"AIR_SYSTEM_DELAY","dataType":"string"},{"name":"SECURITY_DELAY","dataType":"string"},{"name":"AIRLINE_DELAY","dataType":"string"},{"name":"LATE_AIRCRAFT_DELAY","dataType":"string"},{"name":"WEATHER_DELAY","dataType":"string"}]},{"$type":"LocalEntity","name":"weather_noaa_refined","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"weather_noaa_refined.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"STATION","dataType":"string"},{"name":"DATE","dataType":"date"},{"name":"LATITUDE","dataType":"double"},{"name":"LONGITUDE","dataType":"double"},{"name":"ELEVATION","dataType":"string"},{"name":"NAME","dataType":"string"},{"name":"TEMP","dataType":"string"},{"name":"TEMP_ATTRIBUTES","dataType":"string"},{"name":"DEWP","dataType":"string"},{"name":"DEWP_ATTRIBUTES","dataType":"string"},{"name":"SLP","dataType":"string"},{"name":"SLP_ATTRIBUTES","dataType":"string"},{"name":"STP","dataType":"string"},{"name":"STP_ATTRIBUTES","dataType":"string"},{"name":"VISIB","dataType":"string"},{"name":"VISIB_ATTRIBUTES","dataType":"string"},{"name":"WDSP","dataType":"string"},{"name":"WDSP_ATTRIBUTES","dataType":"string"},{"name":"MXSPD","dataType":"string"},{"name":"GUST","dataType":"string"},{"name":"MAX","dataType":"string"},{"name":"MAX_ATTRIBUTES","dataType":"string"},{"name":"MIN","dataType":"string"},{"name":"MIN_ATTRIBUTES","dataType":"string"},{"name":"PRCP","dataType":"string"},{"name":"PRCP_ATTRIBUTES","dataType":"string"},{"name":"SNDP","dataType":"string"},{"name":"FRSHTT","dataType":"string"}]},{"$type":"LocalEntity","name":"weather_raw_py","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"weather_raw_py.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"city","dataType":"string"},{"name":"datetime","dataType":"dateTime"},{"name":"temperature_celsius","dataType":"double"},{"name":"humidity","dataType":"int64"},{"name":"wind_speed","dataType":"double"},{"name":"weather_description","dataType":"string"}]}]}